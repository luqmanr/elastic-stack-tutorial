## Set default CPU Core NGINx utilization
worker_processes auto;

events {}
## Define which servers to include in the load balancing scheme.

http {
    ## Max Size Config
    client_max_body_size 50M;

    upstream landing_page {
        # least_conn;
        # insert more servers below as needed
        server landing_page:8123;  
    }

    upstream kibana {
        # server kibana:5601;
        server 10.123.0.1:5601;
    }

    include /var/log/nginx/log_format.conf;
    access_log /var/log/nginx/access.log main;

    server {
        # set header of real origin
        proxy_set_header X-Real-IP $remote_addr;
        # max request size
        client_max_body_size 50M;
        
        listen 88;

        location / {
            proxy_pass http://kibana;

            client_max_body_size            0;
            proxy_set_header   Host      $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_pass_request_headers      on;
            # Also requires websocket:
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # front-facing api 
        location /login {
            # proxy_pass http://kibana;
            proxy_pass http://landing_page;

            client_max_body_size            0;
            proxy_set_header   Host      $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_pass_request_headers      on;
            proxy_http_version 1.1;
            # Also requires websocket:
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }
}
